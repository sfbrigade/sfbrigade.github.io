---
import TagOrnament from "./TagOrnament.astro";

interface Props {
	id?: string;
	anchor?: "left" | "right";
	size?: "lg" | "md" | "sm";
	showOrnament?: boolean;
}

const Sizes = {
	lg: {
		Heading: "h2",
		headingFontSize: "text-9xl",
		bodyFontSize: "text-4xl",
	},
	md: {
		Heading: "h3",
		headingFontSize: "text-7xl leading-[0.9]",
		bodyFontSize: "text-2xl leading-[1.1]",
	},
	sm: {
		Heading: "h4",
		headingFontSize: "text-3xl",
		bodyFontSize: "text-lg",
	},
};

const {
	id,
	anchor = "left",
	size = "lg",
	showOrnament = true,
} = Astro.props;
const { Heading, headingFontSize, bodyFontSize } = Sizes[size];
---

<section id={id} class="py-4">
	<div
		class:list={[
			"flex",
			"items-center",
			"justify-between",
			"gap-10",
			{ "flex-row-reverse": anchor === "right" },
		]}
	>
		<Heading
			class:list={[
				"flex-1",
				"font-condensed",
				"font-semibold",
				"uppercase",
				headingFontSize,
				"leading-[0.8]",
				"mb-0",
				anchor === "left" && "text-right",
			]}
		>
			<slot name="title" />
		</Heading>
		<div
			class:list={[
				"body",
				"flex-1",
				"text-stone-800",
				bodyFontSize,
				anchor === "right" && "text-right",
			]}
		>
			<slot name="body" />
		</div>
	</div>
	{showOrnament && (
		<div class="flex justify-center mt-8">
			<TagOrnament />
		</div>
	)}
</section>

<style>
	h2, h3, h4 {
		:global(b) {
			color: var(--color-sf-red);
			font-weight: inherit;
		}
	}

	div.body {
		:global(p:last-of-type) {
			margin-bottom: 0;
		}

		:global(i) {
      color: var(--color-stone-600);
      font-weight: 600;
		}
	}
</style>
