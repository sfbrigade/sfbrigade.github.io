---
import { Image } from "astro:assets";
import type { CollectionEntry } from "astro:content";
import DefaultThumbnail from "@/components/DefaultThumbnail.astro";
import { base, getImageAsset, formatShortMDY } from "@/utils";

interface Props {
	post: CollectionEntry<"blog">;
}

// the thumbnail item is set to 14rem square, and the font size is 21px, so
// double that to support a max 2X image
const ThumbnailWidth = 14 * 21;
const Thumbnail2X = 2 * ThumbnailWidth;

const {
	post: {
		id,
		data: {
			title,
			image,
			image_alt = "",
			date,
			descriptionHTML,
		}
	}
} = Astro.props;
const thumbnailImage = image && await getImageAsset(image);
const postURL = base("/blog/" + id);
const dateString = formatShortMDY(date);
---

<li>
	<a href={postURL}>
			{thumbnailImage
				? <Image class="thumbnail"
						src={thumbnailImage}
						alt={image_alt}
						widths={[Thumbnail2X]}
						sizes=`${Thumbnail2X}px`
						inferSize
					/>
				: <DefaultThumbnail size={ThumbnailWidth} />
			}
	</a>
	<div>
		<time datetime={date?.toISOString()}>{dateString}</time>
		<h3><a href={postURL}>{title}</a></h3>
		{/* descriptionHTML is formatted as a <p> tag */}
		<Fragment set:html={descriptionHTML} />
	</div>
</li>

<style>
	li {
		margin: var(--pico-block-spacing-vertical) 0 0 0;
		display: flex;
		flex-direction: row;
		gap: var(--pico-block-spacing-horizontal);
	}

	img.thumbnail {
		aspect-ratio: 1;
		object-fit: cover;
		object-position: center;
		width: 14rem;
		height: 14rem;
	}

	li > div {
		flex: 1;
	}

	time {
		color: var(--pico-muted-color);
		margin-bottom: calc(var(--pico-block-spacing) * 0.5);
		line-height: 1;
		display: block;
	}
</style>
