---
import type { CollectionEntry } from "astro:content";
import { getBlogImage, formatShortMDY } from "@/utils";
import DefaultThumbnail from "@/components/DefaultThumbnail.astro";

interface Props {
	post: CollectionEntry<"blog">;
}

const {
	post: {
		id,
		data: {
			title,
			image,
			date
		}
	}
} = Astro.props;
const imageData = image && await getBlogImage(image);
const backgroundImageURL = imageData?.src ?? "";
const postURL = "blog/" + id;
const dateString = formatShortMDY(date);
---

<article style={`background-image: url(${backgroundImageURL})`}>
	{ !imageData &&
		<DefaultThumbnail size="100%" style="position: absolute;" />}
	<div class="dimmer"></div>
	<a href={postURL}>
		<time datetime={date?.toISOString()}>{dateString}</time>
		<h3>{title}</h3>
	</a>
</article>

<style>
	article {
		aspect-ratio: 1;
		background-size: cover;
		background-position: center;
		padding: 0;
		margin: 0;
		border-radius: 0;
		overflow: hidden;
		position: relative;
	}

	article > a {
		--pico-color: var(--pico-contrast-inverse);
		text-decoration: none;
		height: 100%;
		padding: var(--pico-block-spacing);
		flex-direction: column;
		justify-content: space-between;
		display: flex;
		position: relative;
	}

	article time {
		color: var(--pico-color, white);
		font-size: 0.75rem;
	}

	article h3 {
		--pico-color: white;
		font-size: 1rem;
		margin-bottom: 0;
	}

	.dimmer {
		background-color: rgba(0, 0, 0, 40%);
		width: 100%;
		height: 100%;
		left: 0;
		top: 0;
		transition: background-color .2s;
		position: absolute;
	}

	article:hover .dimmer {
		background-color: rgba(0, 0, 0, 25%);
	}
</style>
